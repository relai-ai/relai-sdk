name: Build, Release, and Publish to PyPI

environment:
  name: release
  url: https://pypi.org/p/relai/
permissions:
  contents: write
  id-token: write

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build the package
        run: python -m build

      - name: Read version from pyproject.toml
        id: get_version
        run: |
          python - <<'PY'
          import sys, pathlib
          import tomllib
          data = tomllib.loads(pathlib.Path("pyproject.toml").read_text())
          v = data.get("project", {}).get("version")
          if not v:
              raise SystemExit("No [project].version found in pyproject.toml")
          print(f"VERSION={v}")
          PY
        shell: bash
      - name: Export VERSION
        run: |
          VERSION=$(python - <<'PY'
          import pathlib, tomllib
          d = tomllib.loads(pathlib.Path("pyproject.toml").read_text())
          print(d["project"]["version"])
          PY
          )
          echo "VERSION=$VERSION" | tee -a "$GITHUB_ENV"

      - name: Create GitHub Release and upload build artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: v${{ env.VERSION }}
          generate_release_notes: true
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
